# -*- coding: utf-8 -*-
"""logistic.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1img0p_eGStKjOG1sKiakXfAH-rsh5156
"""

import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import classification_report, confusion_matrix

data=pd.read_csv('diabetes.csv')

data.isnull()

from sklearn.model_selection import train_test_split
x=data.iloc[:,:-1].values
y=data['diabetes'].values
x,y

from sklearn.model_selection import train_test_split  
x_train, x_test, y_train, y_test= train_test_split(x, y, test_size= 0.25, random_state=0)

model=LogisticRegression(C=0.5)
model.fit(x,y)

model.classes_

model.intercept_

model.coef_

#4. Evaluate the model
model.predict_proba(x)

y_pred = model.predict(x)
print(y_pred)

#accuracy
model.score(x, y)

confusion_matrix(y, y_pred)

#visualization of confusion matrix
cm = confusion_matrix(y, y_pred)

fig, ax = plt.subplots(figsize=(8, 8))
ax.imshow(cm)
ax.grid(False)
ax.xaxis.set(ticks=(0, 1), ticklabels=('Predicted 0s', 'Predicted 1s'))
ax.yaxis.set(ticks=(0, 1), ticklabels=('Actual 0s', 'Actual 1s'))
ax.set_ylim(1.5, -0.5)
for i in range(2):
    for j in range(2):
        ax.text(j, i, cm[i, j], ha='center', va='center', color='red')
plt.show()

#more comprehensive report on the classification 
print(classification_report(y, y_pred))